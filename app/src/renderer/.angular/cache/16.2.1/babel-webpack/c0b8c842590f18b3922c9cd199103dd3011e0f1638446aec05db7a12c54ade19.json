{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { startTask, deleteTask, updateTaskForm, openLogFile, stopTask } from 'src/app/@core/store/actions/schedule.actions';\nexport let TaskCardComponent = class TaskCardComponent {\n  get next() {\n    let next = 0;\n    this.task.triggers?.forEach(trigger => {\n      if (trigger.type === 'CRON' || trigger.type === 'interval') {\n        if (typeof next === 'string') next = parseInt(next);\n        next = next > trigger.next ? next : trigger.next;\n      }\n    });\n    return next;\n  }\n  get hasStartupTrigger() {\n    return this.task.triggers?.some(trigger => trigger.type === 'startup');\n  }\n  constructor(store, dialog) {\n    this.store = store;\n    this.dialog = dialog;\n  }\n  _startTask(event) {\n    event.stopPropagation();\n    this.store.dispatch(startTask({\n      task: this.task\n    }));\n  }\n  _stopTask(event) {\n    event.stopPropagation();\n    if (this.task.status === 'active') this.store.dispatch(stopTask({\n      task: this.task\n    }));\n  }\n  _deleteTask() {\n    this.store.dispatch(deleteTask({\n      task: this.task\n    }));\n  }\n  _openLogFile() {\n    this.store.dispatch(openLogFile({\n      task: this.task\n    }));\n  }\n  _editTask() {\n    this.store.dispatch(updateTaskForm({\n      taskForm: this.task\n    }));\n  }\n};\n__decorate([Input()], TaskCardComponent.prototype, \"task\", void 0);\nTaskCardComponent = __decorate([Component({\n  selector: 'app-task-card',\n  templateUrl: './task-card.component.html',\n  styleUrls: ['./task-card.component.scss']\n})], TaskCardComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}