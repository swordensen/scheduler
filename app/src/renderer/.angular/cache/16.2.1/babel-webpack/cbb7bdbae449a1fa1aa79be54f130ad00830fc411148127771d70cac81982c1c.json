{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { setSchedule, taskAdded, taskDeleted, taskFailed, taskStarted, taskUpdated, taskWaiting } from '../actions/schedule.actions';\nconst initialScheduleState = [];\nconst _scheduleReducer = createReducer(initialScheduleState, on(setSchedule, (state, {\n  schedule\n}) => schedule), on(taskStarted, (state, {\n  task\n}) => state.map(_task => {\n  if (_task.id === task.id) return task;\n  return _task;\n})), on(taskWaiting, (state, {\n  task\n}) => state.map(_task => {\n  if (_task.id === task.id) return task;\n  return _task;\n})), on(taskFailed, (state, {\n  task\n}) => state.map(_task => {\n  if (_task.id === task.id) return task;\n  return _task;\n})), on(taskAdded, (state, {\n  task\n}) => [...state, task]), on(taskUpdated, (state, {\n  task\n}) => state.map(_task => {\n  if (_task.id === task.id) return task;\n  return _task;\n})), on(taskDeleted, (state, {\n  task\n}) => state.reduce((accumulator, _task) => {\n  if (_task.id !== task.id) accumulator.push(_task);\n  return accumulator;\n}, [])));\nexport function scheduleReducer(state, action) {\n  return _scheduleReducer(state, action);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}