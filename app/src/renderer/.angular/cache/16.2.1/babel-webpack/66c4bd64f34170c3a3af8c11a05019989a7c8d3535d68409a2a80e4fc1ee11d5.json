{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { addPathToTaskFormCommand, resetTaskForm, updateTaskForm, updateTaskFormCommand, updateTaskFormDescription, updateTaskFormName, updateTaskFormTrigger } from '../actions/schedule.actions';\nexport const initialTaskFormState = {\n  name: '',\n  description: '',\n  arguments: [''],\n  command: '',\n  triggers: [{\n    type: 'interval',\n    value: 86400000,\n    next: Date.now()\n  }],\n  spawnOptions: {\n    shell: true,\n    detached: true\n  }\n};\nconst _taskFormReducer = createReducer(initialTaskFormState, on(updateTaskForm, (state, {\n  taskForm\n}) => ({\n  ...state,\n  ...taskForm\n})), on(updateTaskFormName, (state, {\n  name\n}) => ({\n  ...state,\n  name\n})), on(updateTaskFormDescription, (state, {\n  description\n}) => ({\n  ...state,\n  description\n})), on(updateTaskFormCommand, (state, {\n  command\n}) => ({\n  ...state,\n  command\n})), on(addPathToTaskFormCommand, (state, {\n  path\n}) => ({\n  ...state,\n  command: path ? `${state.command || ''} ${path}` : state.command || ''\n})), on(updateTaskFormTrigger, (state, {\n  trigger,\n  index\n}) => ({\n  ...state,\n  triggers: state.triggers?.map((_trigger, i) => {\n    if (index === i) return trigger;\n    return trigger;\n  })\n})), on(resetTaskForm, (state, data) => initialTaskFormState));\nexport function taskFormReducer(state, action) {\n  return _taskFormReducer(state, action);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}